<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/09/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>is-a 、have-a、和 like-a 的区别</title>
    <url>/2024/09/16/is-a%20have-a%20%20like-a%20%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<h3 id="1、is-a，has-a，like-a-是什么"><a href="#1、is-a，has-a，like-a-是什么" class="headerlink" title="1、is-a，has-a，like-a 是什么"></a>1、is-a，has-a，like-a 是什么</h3><p>在面向对象设计的领域里，有若干种设计思路，主要有如下三种： <br>is-a、has-a、like-a <br>java 中在类、接口、抽象类中有很多体现。 <br>了解 java 看这里：<a href="http://blog.csdn.net/ooppookid/article/details/51931003">什么是 Java</a> <br>了解类和对象看这里：<a href="http://blog.csdn.net/ooppookid/article/details/51161448">类、对象到底有什么秘密</a> <br>了解接口和抽象类看这里：<a href="http://blog.csdn.net/ooppookid/article/details/51173179">接口和抽象类有什么区别</a></p>
<h3 id="2、is-a-是什么"><a href="#2、is-a-是什么" class="headerlink" title="2、is-a 是什么"></a>2、is-a 是什么</h3><p>is-a，顾名思义，是一个，代表继承关系。 <br>如果 A is-a B，那么 B 就是 A 的父类。 <br>一个类完全包含另一个类的所有属性及行为。 <br>例如 PC 机是计算机，工作站也是计算机，PC 机和工作站是两种不同类型的计算机，但都继承了计算机的共同特性。因此在用 Java 语言实现时，应该将 PC 机和工作站定义成两种类，均继承计算机类。 <br>了解更多继承看这里：<a href="http://blog.csdn.net/ooppookid/article/details/51193477">java 类的继承有什么意义</a></p>
<h3 id="3、has-a-是什么"><a href="#3、has-a-是什么" class="headerlink" title="3、has-a 是什么"></a><em>3、has-a 是什么</em></h3><p>has-a，顾名思义，有一个，代表从属关系。 <br>如果 A has a B，那么 B 就是 A 的组成部分。 <br>同一种类的对象，通过它们的属性的不同值来区别。 <br>例如一台 PC 机的操作系统是 Windows，另一台 PC 机的操作系统是 Linux。操作系统是 PC 机的一个成员变量，根据这一成员变量的不同值，可以区分不同的 PC 机对象。</p>
<h3 id="4、-like-a-是什么"><a href="#4、-like-a-是什么" class="headerlink" title="4、 like-a 是什么"></a>4、 like-a 是什么</h3><p>like-a，顾名思义，像一个，代表组合关系。 <br>如果 A like a B，那么 B 就是 A 的接口。 <br>新类型有老类型的接口，但还包含其他函数，所以不能说它们完全相同。 <br>例如一台手机可以说是一个微型计算机，但是手机的通讯功能显然不是计算机具备的行为，所以手机继承了计算机的特性，同时需要实现通讯功能，而通讯功能需要作为单独接口，而不是计算机的行为。</p>
<h3 id="5、is-a，has-a，like-a-如何应用"><a href="#5、is-a，has-a，like-a-如何应用" class="headerlink" title="5、is-a，has-a，like-a 如何应用"></a>5、is-a，has-a，like-a 如何应用</h3><p>如果你确定两件对象之间是 is-a 的关系，那么此时你应该使用继承；比如菱形、圆形和方形都是形状的一种，那么他们都应该从形状类继承。 <br>如果你确定两件对象之间是 has-a 的关系，那么此时你应该使用聚合；比如电脑是由显示器、CPU、硬盘等组成的，那么你应该把显示器、CPU、硬盘这些类聚合成电脑类。 <br>如果你确定两件对象之间是 like-a 的关系，那么此时你应该使用组合；比如空调继承于制冷机，但它同时有加热功能，那么你应该把让空调继承制冷机类，并实现加热接口。</p>
]]></content>
  </entry>
</search>
